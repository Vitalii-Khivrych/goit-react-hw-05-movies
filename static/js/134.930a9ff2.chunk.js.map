{"version":3,"file":"static/js/134.930a9ff2.chunk.js","mappings":"kPAOMA,EAAgB,CACpBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,GAkDZ,UA/CA,WAEE,OAAwCC,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAkCL,EAAAA,EAAAA,WAAS,GAA3C,eAAOM,EAAP,KAAkBC,EAAlB,KAEMC,EAAcJ,EAAaK,IAAI,SAgCrC,OA9BAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAe,mCAAG,uFACjBH,EADiB,wDAGtBD,GAAa,GAHS,mBAKGK,EAAAA,EAAAA,IAAiBJ,GALpB,UAOW,KAFzBK,EALc,QAOPC,cAPO,wBAQlBC,EAAAA,GAAAA,KAAA,6CAEExB,GAVgB,2BAcpBW,EAAgBW,EAASG,SAdL,kDAgBpBC,QAAQC,IAAI,KAAMC,SAhBE,yBAkBpBZ,GAAa,GAlBO,6EAAH,qDAqBrBI,MACC,CAACH,KAQF,iCACE,SAAC,KAAD,CAAWY,SAPM,SAAAC,GACnBhB,EAA6B,KAAbgB,EAAkB,CAAEC,MAAOD,GAAa,OAOrDf,IAAa,SAAC,KAAD,IACbL,EAAasB,OAAS,IAAK,SAAC,KAAD,CAAeC,OAAQvB","sources":["pages/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Loader, MoviesGallery, SearchBar } from 'components';\nimport { toast } from 'react-toastify';\n\nimport { fetchSearchMovie } from 'helpers/apiService';\nimport { useSearchParams } from 'react-router-dom';\n\nconst optionsNotify = {\n  position: 'top-right',\n  autoClose: 3000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined,\n};\n\nfunction Movies() {\n  // const [query, setQuery] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchParam = searchParams.get('query');\n\n  useEffect(() => {\n    const getSearchMovies = async () => {\n      if (!searchParam) return;\n\n      setIsLoading(true);\n      try {\n        const response = await fetchSearchMovie(searchParam);\n\n        if (response.total_results === 0) {\n          toast.info(\n            `Searching did not find anything. Try again`,\n            optionsNotify\n          );\n          return;\n        }\n        setSearchMovies(response.results);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    getSearchMovies();\n  }, [searchParam]);\n\n  const handleSubmit = newQuery => {\n    setSearchParams(newQuery !== '' ? { query: newQuery } : {});\n    // setQuery(searchParam);\n  };\n\n  return (\n    <>\n      <SearchBar onSubmit={handleSubmit} />\n      {isLoading && <Loader />}\n      {searchMovies.length > 0 && <MoviesGallery movies={searchMovies} />}\n    </>\n  );\n}\n\nexport default Movies;\n"],"names":["optionsNotify","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","useState","searchMovies","setSearchMovies","useSearchParams","searchParams","setSearchParams","isLoading","setIsLoading","searchParam","get","useEffect","getSearchMovies","fetchSearchMovie","response","total_results","toast","results","console","log","message","onSubmit","newQuery","query","length","movies"],"sourceRoot":""}